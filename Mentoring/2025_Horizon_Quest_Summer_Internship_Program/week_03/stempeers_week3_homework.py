# -*- coding: utf-8 -*-
"""stempeers_week3_homework.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11vDFYRjxgRKLKDOrOYlUMV9ZP3kFUBlh

# Week 3 Homework: Data Analysis with Pandas

**Objective:** Practice data cleaning, exploration, and visualization using pandas and matplotlib.

## Part 1: Data Loading and Exploration (20 points)

First, let's load and examine our dataset:

```python
import pandas as pd
import matplotlib.pyplot as plt

# Load the data
df = pd.read_csv('https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/students.csv')
print(df.head()

# Exploration tasks
```

### Question 1.1 (5 points)
Print the first 8 rows of the dataframe using `df.head()`. What do you notice about the structure of the data?

### Question 1.2 (5 points)
Use `df.info()` to examine the data types and missing values. How many columns contain missing values?

### Question 1.3 (10 points)
Calculate basic statistics for numerical columns using `df.describe()`. What's the average math score? How does it compare to science and English?

## Part 2: Data Cleaning (30 points)

```python
# Cleaning tasks
df_clean = df.copy()
```

### Question 2.1 (10 points)
Remove all rows with missing values using `df_clean.dropna()`. How many rows were removed?

### Question 2.2 (10 points)
Filter the data to only include students aged 15-19 using `df_clean[df_clean['age'].between(15, 19)]`. How many students remain?

### Question 2.3 (10 points)
Check for duplicate rows using `df_clean.duplicated().sum()`. Are there any duplicates? If yes, remove them.

## Part 3: Feature Engineering (20 points)

```python
# Feature engineering
```

### Question 3.1 (10 points)
Create a new column 'total_score' that sums math, science, and English scores.

### Question 3.2 (10 points)
Create an 'avg_score' column showing each student's average across all three subjects.

## Part 4: Analysis (20 points)

```python
# Analysis tasks
```

### Question 4.1 (10 points)
Group the data by city and calculate the average math score for each city. Which city has the highest average?

### Question 4.2 (10 points)
Calculate the correlation between math and science scores using `df_clean[['math', 'science']].corr()`. What's the correlation value?

## Part 5: Visualization (10 points)

```python
# Visualization tasks
plt.figure(figsize=(10, 6))
```

### Question 5.1 (5 points)
Create a histogram of English scores with 15 bins. Add proper labels.

### Question 5.2 (5 points)
Make a scatter plot of math vs. science scores with different colors for each city.

## Bonus Challenge (10 extra points)

Create a function that takes a student ID as input and returns:
1. The student's name and city
2. Their best and worst subjects
3. Whether they're above or below average in each subject

```python
def student_report(student_id):
    # Your code here
    return report

# Test your function
print(student_report(42))
```
"""

